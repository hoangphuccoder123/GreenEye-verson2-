// D·ªØ li·ªáu to√†n di·ªán v·ªÅ ph√¢n lo·∫°i r√°c v√† x·ª≠ l√Ω r√°c th·∫£i
const trashClassificationData = {
    // C√°c lo·∫°i r√°c ch√≠nh
    trashCategories: {
        organic: {
            name: "R√°c h·ªØu c∆°",
            description: "R√°c c√≥ ngu·ªìn g·ªëc t·ª´ th·ª±c v·∫≠t, ƒë·ªông v·∫≠t, c√≥ th·ªÉ ph√¢n h·ªßy sinh h·ªçc",
            color: "#4CAF50",
            icon: "üçÉ",
            examples: [
                "V·ªè tr√°i c√¢y (chu·ªëi, cam, t√°o, xo√†i)",
                "Th·ª©c ƒÉn th·ª´a (c∆°m, th·ªãt, c√°, rau c·ªß)",
                "L√° c√¢y, c√†nh c√¢y nh·ªè",
                "V·ªè tr·ª©ng",
                "B√£ c√† ph√™, tr√†",
                "X∆∞∆°ng c√°, x∆∞∆°ng g√† nh·ªè",
                "Hoa h√©o, l√° kh√¥",
                "Rau c·ªß h·ªèng",
                "B√°nh m√¨ c≈©",
                "Ph√¢n ƒë·ªông v·∫≠t"
            ],
            processingTime: "2-6 th√°ng",
            benefits: [
                "T·∫°o ph√¢n compost t·ª± nhi√™n",
                "C·∫£i thi·ªán ƒë·ªô m√†u m·ª° ƒë·∫•t",
                "Gi·∫£m kh√≠ th·∫£i nh√† k√≠nh",
                "Ti·∫øt ki·ªám chi ph√≠ x·ª≠ l√Ω r√°c"
            ]
        },
        recyclable: {
            name: "R√°c t√°i ch·∫ø",
            description: "R√°c c√≥ th·ªÉ t√°i ch·∫ø th√†nh s·∫£n ph·∫©m m·ªõi",
            color: "#2196F3",
            icon: "‚ôªÔ∏è",
            subcategories: {
                plastic: {
                    name: "Nh·ª±a",
                    types: {
                        pet: {
                            code: "PET/PETE (1)",
                            examples: ["Chai n∆∞·ªõc su·ªëi", "Chai n∆∞·ªõc ng·ªçt", "H·ªôp ƒë·ª±ng th·ª±c ph·∫©m trong su·ªët"],
                            recyclable: true,
                            note: "D·ªÖ t√°i ch·∫ø nh·∫•t"
                        },
                        hdpe: {
                            code: "HDPE (2)",
                            examples: ["Chai s·ªØa", "Chai d·∫ßu g·ªôi", "T√∫i nh·ª±a d√†y"],
                            recyclable: true,
                            note: "T√°i ch·∫ø t·ªët"
                        },
                        pvc: {
                            code: "PVC (3)",
                            examples: ["·ªêng n∆∞·ªõc", "M√†ng b·ªçc th·ª±c ph·∫©m", "Th·∫ª t√≠n d·ª•ng"],
                            recyclable: false,
                            note: "ƒê·ªôc h·∫°i khi ƒë·ªët"
                        },
                        ldpe: {
                            code: "LDPE (4)",
                            examples: ["T√∫i nilon m·ªèng", "M√†ng b·ªçc", "N·∫Øp chai m·ªÅm"],
                            recyclable: "limited",
                            note: "Kh√≥ t√°i ch·∫ø"
                        },
                        pp: {
                            code: "PP (5)",
                            examples: ["H·ªôp yogurt", "·ªêng h√∫t", "N·∫Øp chai c·ª©ng"],
                            recyclable: true,
                            note: "T√°i ch·∫ø t·ªët"
                        },
                        ps: {
                            code: "PS (6)",
                            examples: ["H·ªôp x·ªëp", "C·ªëc nh·ª±a trong", "ƒê·ªì ch∆°i nh·ª±a"],
                            recyclable: false,
                            note: "Kh√≥ t√°i ch·∫ø, c√≥ th·ªÉ ƒë·ªôc h·∫°i"
                        },
                        other: {
                            code: "Other (7)",
                            examples: ["Nh·ª±a sinh h·ªçc", "Nh·ª±a composite", "Nh·ª±a ƒëa l·ªõp"],
                            recyclable: false,
                            note: "Kh√¥ng t√°i ch·∫ø ƒë∆∞·ª£c"
                        }
                    }
                },
                paper: {
                    name: "Gi·∫•y",
                    examples: [
                        "B√°o c≈©, t·∫°p ch√≠",
                        "Gi·∫•y vƒÉn ph√≤ng",
                        "S√°ch v·ªü c≈©",
                        "H·ªôp carton",
                        "T√∫i gi·∫•y",
                        "Gi·∫•y bao b√¨"
                    ],
                    excluded: [
                        "Gi·∫•y b√≥ng, gi·∫•y ·∫£nh",
                        "Gi·∫•y d√≠nh bƒÉng keo",
                        "Gi·∫•y ∆∞·ªõt, d∆°",
                        "Gi·∫•y v·ªá sinh ƒë√£ d√πng"
                    ]
                },
                metal: {
                    name: "Kim lo·∫°i",
                    examples: [
                        "Lon nh√¥m (n∆∞·ªõc ng·ªçt, bia)",
                        "Lon thi·∫øc (th·ª©c ƒÉn ƒë√≥ng h·ªôp)",
                        "D√¢y ƒëi·ªán c≈©",
                        "ƒêinh, v√≠t kim lo·∫°i",
                        "N·ªìi ch·∫£o c≈©",
                        "Khung xe ƒë·∫°p c≈©"
                    ]
                },
                glass: {
                    name: "Th·ªßy tinh",
                    examples: [
                        "Chai l·ªç th·ªßy tinh",
                        "C·ªëc th·ªßy tinh",
                        "B√≥ng ƒë√®n s·ª£i ƒë·ªët",
                        "G∆∞∆°ng c≈©"
                    ],
                    excluded: [
                        "Th·ªßy tinh c∆∞·ªùng l·ª±c",
                        "ƒê√®n hu·ª≥nh quang",
                        "Th·ªßy tinh √¥ t√¥"
                    ]
                }
            }
        },
        hazardous: {
            name: "R√°c ƒë·ªôc h·∫°i",
            description: "R√°c ch·ª©a ch·∫•t ƒë·ªôc h·∫°i, c·∫ßn x·ª≠ l√Ω ƒë·∫∑c bi·ªát",
            color: "#F44336",
            icon: "‚ò†Ô∏è",
            examples: [
                "Pin, ·∫Øc quy",
                "ƒê√®n hu·ª≥nh quang, ƒë√®n compact",
                "Thu·ªëc tr·ª´ s√¢u, h√≥a ch·∫•t",
                "S∆°n, keo d√°n",
                "Dung m√¥i, axit",
                "Nhi·ªát k·∫ø th·ªßy ng√¢n",
                "Thi·∫øt b·ªã ƒëi·ªán t·ª≠ (TV, m√°y t√≠nh)",
                "Thu·ªëc h·∫øt h·∫°n",
                "X-quang phim",
                "L·ªëp xe c≈©"
            ],
            dangers: [
                "G√¢y √¥ nhi·ªÖm ƒë·∫•t, n∆∞·ªõc",
                "ƒê·ªôc h·∫°i v·ªõi s·ª©c kh·ªèe",
                "G√¢y ch√°y n·ªï",
                "·∫¢nh h∆∞·ªüng h·ªá sinh th√°i"
            ],
            specialHandling: [
                "Thu gom ri√™ng bi·ªát",
                "Kh√¥ng ƒë∆∞·ª£c v·ª©t chung",
                "Giao cho c∆° s·ªü x·ª≠ l√Ω chuy√™n bi·ªát",
                "ƒêeo b·∫£o h·ªô khi x·ª≠ l√Ω"
            ]
        },
        nonRecyclable: {
            name: "R√°c kh√¥ng t√°i ch·∫ø",
            description: "R√°c kh√¥ng th·ªÉ t√°i ch·∫ø, c·∫ßn x·ª≠ l√Ω b·∫±ng c√°ch kh√°c",
            color: "#9E9E9E",
            icon: "üóëÔ∏è",
            examples: [
                "T√£ l√≥t tr·∫ª em",
                "BƒÉng v·ªá sinh",
                "Bao cao su",
                "B√≥ng bay cao su",
                "K√≠nh c∆∞·ªùng l·ª±c",
                "G∆∞∆°ng soi",
                "B√≥ng ƒë√®n LED h·ªèng",
                "Ceramic, s·ª©",
                "Gi·∫•y carbon",
                "BƒÉng keo trong"
            ]
        }
    },

    // Lu·∫≠t v√† quy ƒë·ªãnh v·ªÅ ph√¢n lo·∫°i r√°c
    wasteManagementLaws: {
        vietnam: {
            lawName: "Lu·∫≠t B·∫£o v·ªá m√¥i tr∆∞·ªùng 2020",
            keyPoints: [
                "Ph√¢n lo·∫°i r√°c t·∫°i ngu·ªìn l√† b·∫Øt bu·ªôc t·ª´ nƒÉm 2025",
                "Ph·∫°t ti·ªÅn t·ª´ 500.000 - 1.000.000 VNƒê cho c√° nh√¢n kh√¥ng ph√¢n lo·∫°i",
                "Ph·∫°t t·ª´ 10-20 tri·ªáu VNƒê cho doanh nghi·ªáp vi ph·∫°m",
                "Khuy·∫øn kh√≠ch gi·∫£m thi·ªÉu r√°c th·∫£i nh·ª±a",
                "TƒÉng c∆∞·ªùng t√°i ch·∫ø v√† t√°i s·ª≠ d·ª•ng"
            ],
            requirements: [
                "Ph√¢n lo·∫°i t·ªëi thi·ªÉu 3 lo·∫°i: h·ªØu c∆°, t√°i ch·∫ø, c√≤n l·∫°i",
                "S·ª≠ d·ª•ng t√∫i/th√πng m√†u kh√°c nhau",
                "Thu gom theo l·ªãch ri√™ng bi·ªát",
                "Gi√°o d·ª•c c·ªông ƒë·ªìng v·ªÅ ph√¢n lo·∫°i"
            ]
        },
        international: {
            japan: {
                country: "Nh·∫≠t B·∫£n",
                system: "Ph√¢n lo·∫°i c·ª±c k·ª≥ chi ti·∫øt (7-10 lo·∫°i)",
                schedule: "Thu gom theo l·ªãch nghi√™m ng·∫∑t",
                penalty: "Ph·∫°t n·∫∑ng, c√≥ th·ªÉ tr·ª•c xu·∫•t ng∆∞·ªùi n∆∞·ªõc ngo√†i"
            },
            germany: {
                country: "ƒê·ª©c",
                system: "H·ªá th·ªëng Dual System - ph√¢n lo·∫°i 5 lo·∫°i ch√≠nh",
                incentive: "Ho√†n ti·ªÅn cho chai l·ªç t√°i ch·∫ø",
                achievement: "T·ª∑ l·ªá t√°i ch·∫ø ƒë·∫°t 67%"
            },
            singapore: {
                country: "Singapore",
                system: "Ph√¢n lo·∫°i 4 lo·∫°i, ·ª©ng d·ª•ng AI trong thu gom",
                goal: "Zero Waste Nation - kh√¥ng ch√¥n l·∫•p t·ª´ 2030",
                technology: "S·ª≠ d·ª•ng robot ph√¢n lo·∫°i"
            }
        }
    },

    // C√°ch x·ª≠ l√Ω r√°c th·∫£i ƒë√∫ng c√°ch
    properWasteProcessing: {
        organicWaste: {
            method: "·ª¶ ph√¢n compost",
            steps: [
                "Cho r√°c h·ªØu c∆° v√†o th√πng/h·ªë ·ªß ph√¢n",
                "Tr·ªôn v·ªõi l√° kh√¥ theo t·ª∑ l·ªá 3:1",
                "T∆∞·ªõi n∆∞·ªõc v·ª´a ƒë·ªß ƒë·ªÉ gi·ªØ ·∫©m",
                "Tr·ªü ƒë·ªÅu 1-2 tu·∫ßn/l·∫ßn",
                "Thu ho·∫°ch compost sau 2-6 th√°ng"
            ],
            benefits: [
                "T·∫°o ph√¢n b√≥n h·ªØu c∆°",
                "Gi·∫£m 30% l∆∞·ª£ng r√°c th·∫£i",
                "C·∫£i thi·ªán c·∫•u tr√∫c ƒë·∫•t",
                "Ti·∫øt ki·ªám ti·ªÅn mua ph√¢n b√≥n"
            ],
            tips: [
                "C·∫Øt nh·ªè r√°c h·ªØu c∆° ƒë·ªÉ ·ªß nhanh h∆°n",
                "Tr√°nh th·ªãt c√° ƒë·ªÉ kh√¥ng thu h√∫t ru·ªìi mu·ªói",
                "Ki·ªÉm so√°t ƒë·ªô ·∫©m 50-60%",
                "Nhi·ªát ƒë·ªô ·ªß l√Ω t∆∞·ªüng 50-65¬∞C"
            ]
        },
        recyclableWaste: {
            preparation: [
                "R·ª≠a s·∫°ch bao b√¨ tr∆∞·ªõc khi b·ªè",
                "Th√°o n·∫Øp, nh√£n d√°n n·∫øu c√≥ th·ªÉ",
                "Ph√¢n lo·∫°i theo ch·∫•t li·ªáu",
                "ƒê·ªÉ kh√¥ tr∆∞·ªõc khi thu gom"
            ],
            process: [
                "Thu gom v√† v·∫≠n chuy·ªÉn ƒë·∫øn nh√† m√°y",
                "Ph√¢n lo·∫°i chi ti·∫øt b·∫±ng m√°y m√≥c",
                "Nghi·ªÅn nh·ªè, r·ª≠a s·∫°ch",
                "N·∫•u ch·∫£y/x·ª≠ l√Ω th√†nh nguy√™n li·ªáu m·ªõi",
                "S·∫£n xu·∫•t s·∫£n ph·∫©m m·ªõi"
            ]
        },
        hazardousWaste: {
            handling: [
                "ƒêeo gƒÉng tay, kh·∫©u trang khi x·ª≠ l√Ω",
                "B·ªçc k·ªπ, d√°n nh√£n c·∫£nh b√°o",
                "B·∫£o qu·∫£n n∆°i kh√¥ r√°o, tho√°ng m√°t",
                "Kh√¥ng ƒë∆∞·ª£c v·ª©t chung v·ªõi r√°c th∆∞·ªùng"
            ],
            disposal: [
                "Li√™n h·ªá ƒë∆°n v·ªã thu gom chuy√™n bi·ªát",
                "Mang ƒë·∫øn ƒëi·ªÉm thu gom c·ªßa ch√≠nh quy·ªÅn",
                "S·ª≠ d·ª•ng d·ªãch v·ª• thu gom nguy h·∫°i",
                "X·ª≠ l√Ω t·∫°i c∆° s·ªü c√≥ gi·∫•y ph√©p"
            ]
        }
    },

    // 3R - Reduce, Reuse, Recycle
    sustainabilityPrinciples: {
        reduce: {
            name: "Gi·∫£m thi·ªÉu (Reduce)",
            priority: 1,
            actions: [
                "Mua s·∫Øm c√≥ k·∫ø ho·∫°ch, tr√°nh d∆∞ th·ª´a",
                "Ch·ªçn s·∫£n ph·∫©m c√≥ bao b√¨ t·ªëi gi·∫£n",
                "S·ª≠ d·ª•ng t√∫i v·∫£i thay t√∫i nilon",
                "In hai m·∫∑t gi·∫•y",
                "T·∫Øt ƒëi·ªán khi kh√¥ng d√πng",
                "S·ª≠ d·ª•ng c·ªëc, ƒë≈©a c√° nh√¢n",
                "Mua s·∫£n ph·∫©m c√≥ ƒë·ªô b·ªÅn cao"
            ]
        },
        reuse: {
            name: "T√°i s·ª≠ d·ª•ng (Reuse)",
            priority: 2,
            actions: [
                "T√°i s·ª≠ d·ª•ng chai l·ªç l√†m ch·∫≠u tr·ªìng c√¢y",
                "D√πng m·∫∑t sau c·ªßa gi·∫•y ƒë√£ in",
                "Bi·∫øn h·ªôp carton th√†nh ƒë·ªì ch∆°i",
                "S·ª≠a ch·ªØa ƒë·ªì ƒë·∫°c thay v√¨ v·ª©t b·ªè",
                "T·∫∑ng, b√°n ƒë·ªì c≈© c√≤n d√πng ƒë∆∞·ª£c",
                "D√πng t√∫i nilon nhi·ªÅu l·∫ßn",
                "T·∫≠n d·ª•ng v·ªè h·ªôp l√†m h·ªôp ƒë·ª±ng"
            ]
        },
        recycle: {
            name: "T√°i ch·∫ø (Recycle)",
            priority: 3,
            actions: [
                "Ph√¢n lo·∫°i r√°c ƒë√∫ng c√°ch",
                "L√†m s·∫°ch bao b√¨ tr∆∞·ªõc khi t√°i ch·∫ø",
                "Tham gia ch∆∞∆°ng tr√¨nh thu gom t√°i ch·∫ø",
                "·ª¶ng h·ªô s·∫£n ph·∫©m t·ª´ v·∫≠t li·ªáu t√°i ch·∫ø",
                "Gi√°o d·ª•c ng∆∞·ªùi kh√°c v·ªÅ t√°i ch·∫ø"
            ]
        }
    },

    // ·ª®ng d·ª•ng c√¥ng ngh·ªá trong ph√¢n lo·∫°i r√°c
    technologyApplications: {
        aiClassification: {
            name: "Ph√¢n lo·∫°i b·∫±ng AI",
            description: "S·ª≠ d·ª•ng tr√≠ tu·ªá nh√¢n t·∫°o ƒë·ªÉ nh·∫≠n di·ªán v√† ph√¢n lo·∫°i r√°c",
            advantages: [
                "ƒê·ªô ch√≠nh x√°c cao (>95%)",
                "X·ª≠ l√Ω nhanh, li√™n t·ª•c",
                "Gi·∫£m sai s√≥t do con ng∆∞·ªùi",
                "H·ªçc h·ªèi v√† c·∫£i thi·ªán li√™n t·ª•c"
            ],
            implementation: [
                "Camera ch·ª•p ·∫£nh r√°c th·∫£i",
                "AI ph√¢n t√≠ch h√¨nh ·∫£nh",
                "X√°c ƒë·ªãnh lo·∫°i r√°c",
                "ƒê∆∞a ra h∆∞·ªõng d·∫´n ph√¢n lo·∫°i"
            ]
        },
        smartBins: {
            name: "Th√πng r√°c th√¥ng minh",
            features: [
                "C·∫£m bi·∫øn ƒë·∫ßy/r·ªóng",
                "T·ª± ƒë·ªông m·ªü n·∫Øp",
                "N√©n r√°c t·ª± ƒë·ªông",
                "K·∫øt n·ªëi IoT",
                "Th√¥ng b√°o khi c·∫ßn thu gom"
            ]
        },
        mobileApps: {
            name: "·ª®ng d·ª•ng di ƒë·ªông",
            functions: [
                "H∆∞·ªõng d·∫´n ph√¢n lo·∫°i",
                "L·ªãch thu gom r√°c",
                "ƒêi·ªÉm th∆∞·ªüng t√°i ch·∫ø",
                "B·∫£n ƒë·ªì ƒëi·ªÉm thu gom",
                "Chia s·∫ª kinh nghi·ªám"
            ]
        }
    },

    // Th·ªëng k√™ v√† s·ªë li·ªáu
    statistics: {
        vietnam: {
            totalWaste: "27.8 tri·ªáu t·∫•n/nƒÉm (2020)",
            wastePerCapita: "0.84 kg/ng∆∞·ªùi/ng√†y",
            recyclingRate: "6-8%",
            organicWaste: "65%",
            plasticWaste: "8-12%",
            paperWaste: "5-7%"
        },
        global: {
            totalWaste: "2.01 t·ª∑ t·∫•n/nƒÉm",
            projection2050: "3.4 t·ª∑ t·∫•n/nƒÉm",
            topRecyclers: [
                "ƒê·ª©c (67%)",
                "√Åo (63%)",
                "H√†n Qu·ªëc (59%)",
                "Wales (56%)",
                "Th·ª•y Sƒ© (53%)"
            ]
        }
    },

    // T√°c h·∫°i c·ªßa vi·ªác kh√¥ng ph√¢n lo·∫°i r√°c
    environmentalImpacts: {
        soilPollution: {
            name: "√î nhi·ªÖm ƒë·∫•t",
            causes: [
                "Ch√¥n l·∫•p r√°c kh√¥ng ph√¢n lo·∫°i",
                "R√≤ r·ªâ h√≥a ch·∫•t t·ª´ r√°c ƒë·ªôc h·∫°i",
                "Ph√¢n h·ªßy kh√¥ng ho√†n to√†n"
            ],
            effects: [
                "Gi·∫£m ƒë·ªô m√†u m·ª° ƒë·∫•t",
                "·∫¢nh h∆∞·ªüng c√¢y tr·ªìng",
                "√î nhi·ªÖm n∆∞·ªõc ng·∫ßm"
            ]
        },
        waterPollution: {
            name: "√î nhi·ªÖm n∆∞·ªõc",
            causes: [
                "N∆∞·ªõc r√°c th·∫£i th·∫•m xu·ªëng",
                "V·ª©t r√°c xu·ªëng s√¥ng, bi·ªÉn",
                "H√≥a ch·∫•t t·ª´ r√°c ƒë·ªôc h·∫°i"
            ],
            effects: [
                "N∆∞·ªõc sinh ho·∫°t b·ªã √¥ nhi·ªÖm",
                "C√° ch·∫øt h√†ng lo·∫°t",
                "·∫¢nh h∆∞·ªüng h·ªá sinh th√°i n∆∞·ªõc"
            ]
        },
        airPollution: {
            name: "√î nhi·ªÖm kh√¥ng kh√≠",
            causes: [
                "ƒê·ªët r√°c th·∫£i b·ª´a b√£i",
                "Kh√≠ th·∫£i t·ª´ b√£i r√°c",
                "Ph√¢n h·ªßy y·∫øm kh√≠"
            ],
            effects: [
                "Kh√≠ nh√† k√≠nh tƒÉng",
                "B·ªánh v·ªÅ ƒë∆∞·ªùng h√¥ h·∫•p",
                "M√πi h√¥i th·ªëi"
            ]
        }
    },

    // C√°c s√°ng ki·∫øn xanh
    greenInitiatives: {
        community: [
            "Ng√†y ch·ªß nh·∫≠t xanh - d·ªçn d·∫πp m√¥i tr∆∞·ªùng",
            "Trao ƒë·ªïi ƒë·ªì c≈© trong c·ªông ƒë·ªìng",
            "Ch·ª£ phi√™n ƒë·ªì t√°i ch·∫ø",
            "Nh√≥m ·ªß ph√¢n compost c·ªông ƒë·ªìng",
            "Chi·∫øn d·ªãch kh√¥ng d√πng t√∫i nilon"
        ],
        school: [
            "Gi√°o d·ª•c m√¥i tr∆∞·ªùng t·ª´ ti·ªÉu h·ªçc",
            "Cu·ªôc thi s√°ng t·∫°o t·ª´ r√°c th·∫£i",
            "M√¥ h√¨nh tr∆∞·ªùng h·ªçc xanh",
            "C√¢u l·∫°c b·ªô b·∫£o v·ªá m√¥i tr∆∞·ªùng",
            "Ng√†y kh√¥ng r√°c th·∫£i nh·ª±a"
        ],
        corporate: [
            "Ch√≠nh s√°ch gi·∫£m thi·ªÉu bao b√¨",
            "Ch∆∞∆°ng tr√¨nh thu h·ªìi s·∫£n ph·∫©m",
            "VƒÉn ph√≤ng kh√¥ng gi·∫•y",
            "Khuy·∫øn kh√≠ch nh√¢n vi√™n ƒëi xe ƒë·∫°p",
            "ƒê·∫ßu t∆∞ c√¥ng ngh·ªá xanh"
        ]
    },

    // M·∫πo v√† th·ªß thu·∫≠t ph√¢n lo·∫°i r√°c
    practicalTips: {
        kitchen: [
            "ƒê·∫∑t nhi·ªÅu th√πng r√°c nh·ªè cho t·ª´ng lo·∫°i",
            "D√πng t√∫i gi·∫•y cho r√°c h·ªØu c∆°",
            "R·ª≠a s∆° qua ƒë·ªì ƒë√≥ng h·ªôp tr∆∞·ªõc khi b·ªè",
            "T√°ch n·∫Øp chai ra kh·ªèi th√¢n chai",
            "Kh√¥ng b·ªè d·∫ßu m·ª° xu·ªëng b·ªìn r·ª≠a"
        ],
        bathroom: [
            "·ªêng thu·ªëc ƒë√°nh rƒÉng c·∫Øt ƒë√¥i ƒë·ªÉ r·ª≠a s·∫°ch",
            "Chai shampoo r·ª≠a s·∫°ch tr∆∞·ªõc khi b·ªè",
            "Bao b√¨ m·ªπ ph·∫©m ph√¢n lo·∫°i theo ch·∫•t li·ªáu",
            "B√¥ng tƒÉm, b√¥ng g√≤n v√†o r√°c kh√¥ng t√°i ch·∫ø"
        ],
        office: [
            "H·ªôp m·ª±c in c≈© giao l·∫°i nh√† cung c·∫•p",
            "Gi·∫•y m·ªôt m·∫∑t d√πng l√†m gi·∫•y nh√°p",
            "Pin c≈© thu gom ri√™ng",
            "Thi·∫øt b·ªã ƒëi·ªán t·ª≠ c≈© ƒë∆∞a ƒë·∫øn ƒëi·ªÉm thu gom"
        ]
    }
};

// H√†m ti·ªán √≠ch ƒë·ªÉ l·∫•y th√¥ng tin ph√¢n lo·∫°i
const wasteClassificationUtils = {
    // Nh·∫≠n di·ªán lo·∫°i r√°c t·ª´ t√™n
    identifyWasteType: function(itemName) {
        const item = itemName.toLowerCase();
        
        for (const [categoryKey, categoryData] of Object.entries(trashClassificationData.trashCategories)) {
            if (categoryData.examples) {
                for (const example of categoryData.examples) {
                    if (example.toLowerCase().includes(item) || item.includes(example.toLowerCase())) {
                        return {
                            category: categoryKey,
                            name: categoryData.name,
                            color: categoryData.color,
                            icon: categoryData.icon
                        };
                    }
                }
            }
            
            // Ki·ªÉm tra subcategories
            if (categoryData.subcategories) {
                for (const [subKey, subData] of Object.entries(categoryData.subcategories)) {
                    if (subData.examples) {
                        for (const example of subData.examples) {
                            if (example.toLowerCase().includes(item) || item.includes(example.toLowerCase())) {
                                return {
                                    category: categoryKey,
                                    subcategory: subKey,
                                    name: categoryData.name,
                                    subname: subData.name,
                                    color: categoryData.color,
                                    icon: categoryData.icon
                                };
                            }
                        }
                    }
                }
            }
        }
        
        return null;
    },

    // L·∫•y h∆∞·ªõng d·∫´n x·ª≠ l√Ω cho lo·∫°i r√°c
    getProcessingGuide: function(category) {
        const guides = {
            organic: trashClassificationData.properWasteProcessing.organicWaste,
            recyclable: trashClassificationData.properWasteProcessing.recyclableWaste,
            hazardous: trashClassificationData.properWasteProcessing.hazardousWaste,
            nonRecyclable: {
                method: "Ch√¥n l·∫•p ho·∫∑c ƒë·ªët an to√†n",
                note: "T√¨m c√°ch thay th·∫ø b·∫±ng s·∫£n ph·∫©m th√¢n thi·ªán m√¥i tr∆∞·ªùng"
            }
        };
        
        return guides[category] || null;
    },

    // L·∫•y m√†u th√πng r√°c theo lo·∫°i
    getBinColor: function(category) {
        const colors = {
            organic: "green",
            recyclable: "blue", 
            hazardous: "red",
            nonRecyclable: "gray"
        };
        
        return colors[category] || "gray";
    },

    // T√≠nh ƒëi·ªÉm m√¥i tr∆∞·ªùng d·ª±a tr√™n h√†nh ƒë·ªông
    calculateEcoPoints: function(action, quantity = 1) {
        const points = {
            compost_organic: 10,
            recycle_plastic: 5,
            recycle_paper: 3,
            proper_hazardous_disposal: 15,
            reduce_usage: 8,
            reuse_item: 6
        };
        
        return (points[action] || 0) * quantity;
    },

    // L·∫•y tip ng·∫´u nhi√™n
    getRandomTip: function() {
        const allTips = [
            ...trashClassificationData.practicalTips.kitchen,
            ...trashClassificationData.practicalTips.bathroom,
            ...trashClassificationData.practicalTips.office
        ];
        
        return allTips[Math.floor(Math.random() * allTips.length)];
    },

    // Ki·ªÉm tra xem m·ªôt v·∫≠t ph·∫©m c√≥ th·ªÉ compost ƒë∆∞·ª£c kh√¥ng
    isCompostable: function(item) {
        const compostableItems = trashClassificationData.trashCategories.organic.examples;
        const itemLower = item.toLowerCase();
        
        return compostableItems.some(example => 
            example.toLowerCase().includes(itemLower) || 
            itemLower.includes(example.toLowerCase())
        );
    },

    // L·∫•y th·ªëng k√™ t·ªïng quan
    getStatistics: function() {
        return {
            vietnam: trashClassificationData.statistics.vietnam,
            global: trashClassificationData.statistics.global,
            environmental_impacts: trashClassificationData.environmentalImpacts
        };
    }
};

// Export ƒë·ªÉ s·ª≠ d·ª•ng trong c√°c file kh√°c
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        trashClassificationData,
        wasteClassificationUtils
    };
}

// V√≠ d·ª• s·ª≠ d·ª•ng
console.log("=== V√ç D·ª§ S·ª¨ D·ª§NG D·ªÆLI·ªÜU PH√ÇN LO·∫†I R√ÅC ===");
console.log("\n1. Nh·∫≠n di·ªán lo·∫°i r√°c:");
console.log(wasteClassificationUtils.identifyWasteType("v·ªè chu·ªëi"));
console.log(wasteClassificationUtils.identifyWasteType("chai nh·ª±a"));

console.log("\n2. H∆∞·ªõng d·∫´n x·ª≠ l√Ω r√°c h·ªØu c∆°:");
console.log(wasteClassificationUtils.getProcessingGuide("organic"));

console.log("\n3. Tip ng·∫´u nhi√™n:");
console.log(wasteClassificationUtils.getRandomTip());

console.log("\n4. Ki·ªÉm tra kh·∫£ nƒÉng compost:");
console.log("V·ªè tr·ª©ng c√≥ th·ªÉ compost:", wasteClassificationUtils.isCompostable("v·ªè tr·ª©ng"));
console.log("T√∫i nilon c√≥ th·ªÉ compost:", wasteClassificationUtils.isCompostable("t√∫i nilon"));

console.log("\n5. T√≠nh ƒëi·ªÉm m√¥i tr∆∞·ªùng:");
console.log("·ª¶ ph√¢n 1kg r√°c h·ªØu c∆°:", wasteClassificationUtils.calculateEcoPoints("compost_organic", 1), "ƒëi·ªÉm");
